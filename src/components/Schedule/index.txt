import React,{useRef} from 'react'
import JqxScheduler, {
  ISchedulerProps,
  jqx,
} from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxscheduler'

const Schedule = ():React.FC<{}, ISchedulerProps> =>  {
  const myScheduler = useRef<JqxScheduler>()


    const appointments = new Array()
    const appointment1 = {
      calendar: 'Room 1',
      description: 'Quarterly Project Review Meeting',
      end: new Date(2017, 10, 23, 16, 0, 0),
      id: 'id1',
      location: '',
      start: new Date(2017, 10, 23, 9, 0, 0),
      subject: 'Nancy',
    }
    const appointment2 = {
      calendar: 'Room 2',
      description: 'Course Social Media',
      end: new Date(2017, 10, 24, 15, 0, 0),
      id: 'id2',
      location: '',
      start: new Date(2017, 10, 24, 10, 0, 0),
      subject: 'John',
    }
    const appointment3 = {
      calendar: 'Room 3',
      description: '',
      end: new Date(2017, 10, 27, 13, 0, 0),
      id: 'id3',
      location: '',
      start: new Date(2017, 10, 27, 11, 0, 0),
      subject: 'Antony',
    }
    const appointment4 = {
      calendar: 'Room 2',
      description: 'New Projects Planning',
      end: new Date(2017, 10, 23, 18, 0, 0),
      id: 'id4',
      location: '',
      start: new Date(2017, 10, 23, 16, 0, 0),
      subject: 'Michael',
    }
    const appointment5 = {
      calendar: 'Room 1',
      description: 'Interview with James',
      end: new Date(2017, 10, 25, 17, 0, 0),
      id: 'id5',
      location: '',
      start: new Date(2017, 10, 25, 15, 0, 0),
      subject: 'Peter',
    }
    const appointment6 = {
      calendar: 'Room 4',
      description: 'Interview with Nancy',
      end: new Date(2017, 10, 26, 16, 0, 0),
      id: 'id6',
      location: '',
      start: new Date(2017, 10, 26, 14, 0, 0),
      subject: 'George',
    }
    appointments.push(appointment1)
    appointments.push(appointment2)
    appointments.push(appointment3)
    appointments.push(appointment4)
    appointments.push(appointment5)
    appointments.push(appointment6)
    const source: any = {
      dataFields: [
        { name: 'background', type: 'string' },
        { name: 'borderColor', type: 'string' },
        { name: 'id', type: 'string' },
        { name: 'description', type: 'string' },
        { name: 'location', type: 'string' },
        { name: 'subject', type: 'string' },
        { name: 'calendar', type: 'string' },
        { name: 'style', type: 'string' },
        { name: 'start', type: 'date' },
        { name: 'end', type: 'date' },
      ],
      dataType: 'array',
      id: 'id',
      localData: appointments,
    }
    const dataAdapter: any = new jqx.dataAdapter(source)
    state = {
      appointmentDataFields: {
        background: 'background',
        borderColor: 'borderColor',
        description: 'description',
        from: 'start',
        id: 'id',
        location: 'location',
        resourceId: 'calendar',
        style: 'style',
        subject: 'subject',
        to: 'end',
      },
      date: new jqx.date(2017, 11, 23),
      height: 600,
      ready: () => {
        setTimeout(() => {
          myScheduler.current!.ensureAppointmentVisible('id1')
        })
      },
      resources: {
        colorScheme: 'scheme05',
        dataField: 'calendar',
        source: new jqx.dataAdapter(source),
      },
      source: dataAdapter,
      views: ['dayView', 'weekView', 'monthView'],
    }

 
  public render() {
    return (
      <JqxScheduler
        ref={this.myScheduler}
        // @ts-ignore
        width={getWidth('scheduler')}
        height={this.state.height}
        date={this.state.date}
        source={this.state.source}
        view={'weekView'}
        appointmentDataFields={this.state.appointmentDataFields}
        resources={this.state.resources}
        appointmentsMinHeight={20}
        views={this.state.views}
        ready={this.state.ready}
        renderAppointment={this.state.renderAppointment}
      />
    )
  }
}
export default App

